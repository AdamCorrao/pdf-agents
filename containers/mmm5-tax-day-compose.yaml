---
version: '3'


services:
  gsas-agent:
    image: gsas:conda
    build:
      context: ../gsas
      dockerfile: Containerfile-conda
    command: conda run -n GSASII --no-capture-output uvicorn bluesky_adaptive.server:app --host 0.0.0.0 --root-path /gsas-agent
    environment:
      - TILED_API_KEY=$TILED_API_KEY
      - HTTPSERVER_API_KEY=$HTTPSERVER_API_KEY
      - BS_AGENT_STARTUP_SCRIPT_PATH=/src/pdf-agents/pdf_agents/startup_scripts/mmm5-tax-day/gsas.py
    volumes:
      - type: bind
        source: ../
        target: /src/pdf-agents/
        read_only: true
      - type: bind
        source: /etc/bluesky/kafka.yml
        target: /etc/bluesky/kafka.yml
        read_only: true

  gsas-ui:
    image: ghcr.io/maffettone/bluesky-adaptive-ui:latest
    entrypoint: /modify_dns.sh
    command: python3 /src/bluesky-adaptive-ui/bluesky_adaptive_ui/default_dash_app/app.py --agent-address gsas-agent --agent-port 8000
    environment:
      - DASH_REQUEST_PATHNAME_PREFIX=/gsas/
    volumes:
      - ./modify_dns.sh:/modify_dns.sh
      - type: bind
        source: ../../bluesky-adaptive-ui
        target: /src/bluesky-adaptive-ui
        read_only: true
    depends_on:
      gsas-agent:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8050"]
      interval: 20s
      timeout: 10s
      retries: 5

  kmeans-gsas-agent:
    image: gsas:conda
    command: conda run -n GSASII --no-capture-output uvicorn bluesky_adaptive.server:app --host 0.0.0.0 --root-path /kmeans-gsas-agent
    environment:
      - TILED_API_KEY=$TILED_API_KEY
      - HTTPSERVER_API_KEY=$HTTPSERVER_API_KEY
      - BS_AGENT_STARTUP_SCRIPT_PATH=/src/pdf-agents/pdf_agents/startup_scripts/mmm5-tax-day/kmeans-gsas.py
    volumes:
      - type: bind
        source: ../
        target: /src/pdf-agents/
        read_only: true
      - type: bind
        source: /etc/bluesky/kafka.yml
        target: /etc/bluesky/kafka.yml
        read_only: true
    depends_on:
      gsas:
        condition: service_started

  kmeans-gsas-ui:
    image: ghcr.io/maffettone/bluesky-adaptive-ui:latest
    entrypoint: /modify_dns.sh
    command: python3 /src/bluesky-adaptive-ui/bluesky_adaptive_ui/default_dash_app/app.py --agent-address kmeans-gsas-agent --agent-port 8000
    environment:
      - DASH_REQUEST_PATHNAME_PREFIX=/kmeans-gsas/
    volumes:
      - ./modify_dns.sh:/modify_dns.sh
      - type: bind
        source: ../../bluesky-adaptive-ui
        target: /src/bluesky-adaptive-ui
        read_only: true
    depends_on:
      kmeans-gsas-agent:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8050"]
      interval: 20s
      timeout: 10s
      retries: 5

  peakfinding-agent:
    image: gsas:conda
    command: conda run -n GSASII --no-capture-output uvicorn bluesky_adaptive.server:app --host 0.0.0.0 --root-path /peakfinding-agent
    environment:
      - TILED_API_KEY=$TILED_API_KEY
      - HTTPSERVER_API_KEY=$HTTPSERVER_API_KEY
      - BS_AGENT_STARTUP_SCRIPT_PATH=/src/pdf-agents/pdf_agents/startup_scripts/mmm5-tax-day/peakfit.py
    volumes:
      - type: bind
        source: ../
        target: /src/pdf-agents/
        read_only: true
      - type: bind
        source: /etc/bluesky/kafka.yml
        target: /etc/bluesky/kafka.yml
        read_only: true

  peakfinding-ui:
    image: ghcr.io/maffettone/bluesky-adaptive-ui:latest
    entrypoint: /modify_dns.sh
    command: python3 /src/bluesky-adaptive-ui/bluesky_adaptive_ui/default_dash_app/app.py --agent-address peakfinding-agent --agent-port 8000
    environment:
      - DASH_REQUEST_PATHNAME_PREFIX=/peakfinding/
    volumes:
      - ./modify_dns.sh:/modify_dns.sh
      - type: bind
        source: ../../bluesky-adaptive-ui
        target: /src/bluesky-adaptive-ui
        read_only: true
    depends_on:
      peakfinding-agent:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8050"]
      interval: 20s
      timeout: 10s
      retries: 5
    
  proxy:
    image: docker.io/nginx
    init: true
    ports:
      - "11973:11973"
    volumes:
      - type: bind
        source: ../containers/nginx/nginx.conf
        target: /etc/nginx/nginx.conf
        read_only: true
      - type: bind
        source: ../containers/nginx/locs.d
        target: /etc/nginx/locs.d
        read_only: true
      - type: bind
        source: ../containers/nginx/html
        target: /var/www/html
        read_only: true
    depends_on:
      gsas-agent:
        condition: service_started
      gsas-ui:
        condition: service_healthy
      kmeans-gsas:
        condition: service_started
      kmeans-gsas-ui:
        condition: service_healthy
      peakfinding-agent:
        condition: service_started
      peakfinding-ui:
        condition: service_healthy
    restart: always


